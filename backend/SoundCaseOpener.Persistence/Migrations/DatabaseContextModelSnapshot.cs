// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SoundCaseOpener.Persistence.Util;

#nullable disable

namespace SoundCaseOpener.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SoundCaseOpener")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("ItemSequence");

            modelBuilder.HasSequence("ItemTemplateSequence");

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.CaseItem", b =>
                {
                    b.Property<int>("CaseTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("case_template_id");

                    b.Property<int>("ItemTemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("item_template_id");

                    b.Property<double>("Chance")
                        .HasColumnType("double precision")
                        .HasColumnName("chance");

                    b.HasKey("CaseTemplateId", "ItemTemplateId")
                        .HasName("pk_case_item");

                    b.HasIndex("ItemTemplateId")
                        .HasDatabaseName("ix_case_item_item_template_id");

                    b.ToTable("case_item", "SoundCaseOpener");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('\"SoundCaseOpener\".\"ItemSequence\"')");

                    NpgsqlPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("template_id");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TemplateId");

                    b.ToTable("items", "SoundCaseOpener");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.ItemTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('\"SoundCaseOpener\".\"ItemTemplateSequence\"')");

                    NpgsqlPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Rarity")
                        .HasColumnType("integer")
                        .HasColumnName("rarity");

                    b.HasKey("Id");

                    b.ToTable("item_templates", "SoundCaseOpener");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.SoundFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_path");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_sound_file");

                    b.ToTable("sound_file", "SoundCaseOpener");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_user_username");

                    b.ToTable("user", "SoundCaseOpener");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.Case", b =>
                {
                    b.HasBaseType("SoundCaseOpener.Persistence.Model.Item");

                    b.ToTable("cases", "SoundCaseOpener");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.Sound", b =>
                {
                    b.HasBaseType("SoundCaseOpener.Persistence.Model.Item");

                    b.Property<int>("Cooldown")
                        .HasColumnType("integer")
                        .HasColumnName("cooldown");

                    b.ToTable("sounds", "SoundCaseOpener");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.CaseTemplate", b =>
                {
                    b.HasBaseType("SoundCaseOpener.Persistence.Model.ItemTemplate");

                    b.ToTable("case_templates", "SoundCaseOpener");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.SoundTemplate", b =>
                {
                    b.HasBaseType("SoundCaseOpener.Persistence.Model.ItemTemplate");

                    b.Property<int>("MaxCooldown")
                        .HasColumnType("integer")
                        .HasColumnName("max_cooldown");

                    b.Property<int>("MinCooldown")
                        .HasColumnType("integer")
                        .HasColumnName("min_cooldown");

                    b.Property<int>("SoundFileId")
                        .HasColumnType("integer")
                        .HasColumnName("sound_file_id");

                    b.HasIndex("SoundFileId")
                        .HasDatabaseName("ix_sound_templates_sound_file_id");

                    b.ToTable("sound_templates", "SoundCaseOpener");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.CaseItem", b =>
                {
                    b.HasOne("SoundCaseOpener.Persistence.Model.CaseTemplate", "CaseTemplate")
                        .WithMany("ItemTemplates")
                        .HasForeignKey("CaseTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_case_item_case_templates_case_template_id");

                    b.HasOne("SoundCaseOpener.Persistence.Model.ItemTemplate", "ItemTemplate")
                        .WithMany("CaseTemplates")
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_case_item_item_template_item_template_id");

                    b.Navigation("CaseTemplate");

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.Item", b =>
                {
                    b.HasOne("SoundCaseOpener.Persistence.Model.User", "Owner")
                        .WithMany("Items")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoundCaseOpener.Persistence.Model.ItemTemplate", "Template")
                        .WithMany("Items")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.SoundTemplate", b =>
                {
                    b.HasOne("SoundCaseOpener.Persistence.Model.SoundFile", "SoundFile")
                        .WithMany("SoundTemplates")
                        .HasForeignKey("SoundFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sound_templates_sound_file_sound_file_id");

                    b.Navigation("SoundFile");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.ItemTemplate", b =>
                {
                    b.Navigation("CaseTemplates");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.SoundFile", b =>
                {
                    b.Navigation("SoundTemplates");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.User", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.CaseTemplate", b =>
                {
                    b.Navigation("ItemTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
