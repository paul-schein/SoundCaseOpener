// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SoundCaseOpener.Persistence.Util;

#nullable disable

namespace SoundCaseOpener.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250614145937_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SoundCaseOpener")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SoundCaseOpener.Persistence.Model.Rocket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("manufacturer");

                    b.Property<double>("MaxThrust")
                        .HasColumnType("double precision")
                        .HasColumnName("max_thrust");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model_name");

                    b.Property<long>("PayloadDeltaV")
                        .HasColumnType("bigint")
                        .HasColumnName("payload_delta_v");

                    b.HasKey("Id")
                        .HasName("pk_rocket");

                    b.ToTable("rocket", "SoundCaseOpener");
                });
#pragma warning restore 612, 618
        }
    }
}
